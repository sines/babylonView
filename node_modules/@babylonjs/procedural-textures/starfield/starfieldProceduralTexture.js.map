{"version":3,"file":"starfieldProceduralTexture.js","sourceRoot":"","sources":["../../../sourceES6/proceduralTexturesLibrary/src/starfield/starfieldProceduralTexture.ts"],"names":[],"mappings":"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","sourcesContent":["import { serialize, SerializationHelper } from \"@babylonjs/core/Misc/decorators\";\nimport { Texture } from \"@babylonjs/core/Materials/Textures/texture\";\nimport { ProceduralTexture } from \"@babylonjs/core/Materials/Textures/Procedurals/proceduralTexture\";\nimport { Scene } from \"@babylonjs/core/scene\";\nimport { _TypeStore } from '@babylonjs/core/Misc/typeStore';\n\nimport \"./starfieldProceduralTexture.fragment\";\n\nexport class StarfieldProceduralTexture extends ProceduralTexture {\n    private _time = 1;\n    private _alpha = 0.5;\n    private _beta = 0.8;\n    private _zoom = 0.8;\n    private _formuparam = 0.53;\n    private _stepsize = 0.1;\n    private _tile = 0.850;\n    private _brightness = 0.0015;\n    private _darkmatter = 0.400;\n    private _distfading = 0.730;\n    private _saturation = 0.850;\n\n    constructor(name: string, size: number, scene: Scene, fallbackTexture?: Texture, generateMipMaps?: boolean) {\n        super(name, size, \"starfieldProceduralTexture\", scene, fallbackTexture, generateMipMaps);\n        this.updateShaderUniforms();\n    }\n\n    public updateShaderUniforms() {\n        this.setFloat(\"time\", this._time);\n        this.setFloat(\"alpha\", this._alpha);\n        this.setFloat(\"beta\", this._beta);\n        this.setFloat(\"zoom\", this._zoom);\n        this.setFloat(\"formuparam\", this._formuparam);\n        this.setFloat(\"stepsize\", this._stepsize);\n        this.setFloat(\"tile\", this._tile);\n        this.setFloat(\"brightness\", this._brightness);\n        this.setFloat(\"darkmatter\", this._darkmatter);\n        this.setFloat(\"distfading\", this._distfading);\n        this.setFloat(\"saturation\", this._saturation);\n    }\n\n    @serialize()\n    public get time(): number {\n        return this._time;\n    }\n\n    public set time(value: number) {\n        this._time = value;\n        this.updateShaderUniforms();\n    }\n\n    @serialize()\n    public get alpha(): number {\n        return this._alpha;\n    }\n\n    public set alpha(value: number) {\n        this._alpha = value;\n        this.updateShaderUniforms();\n    }\n\n    @serialize()\n    public get beta(): number {\n        return this._beta;\n    }\n\n    public set beta(value: number) {\n        this._beta = value;\n        this.updateShaderUniforms();\n    }\n\n    @serialize()\n    public get formuparam(): number {\n        return this._formuparam;\n    }\n\n    public set formuparam(value: number) {\n        this._formuparam = value;\n        this.updateShaderUniforms();\n    }\n\n    @serialize()\n    public get stepsize(): number {\n        return this._stepsize;\n    }\n\n    public set stepsize(value: number) {\n        this._stepsize = value;\n        this.updateShaderUniforms();\n    }\n\n    @serialize()\n    public get zoom(): number {\n        return this._zoom;\n    }\n\n    public set zoom(value: number) {\n        this._zoom = value;\n        this.updateShaderUniforms();\n    }\n\n    @serialize()\n    public get tile(): number {\n        return this._tile;\n    }\n\n    public set tile(value: number) {\n        this._tile = value;\n        this.updateShaderUniforms();\n    }\n\n    @serialize()\n    public get brightness(): number {\n        return this._brightness;\n    }\n\n    public set brightness(value: number) {\n        this._brightness = value;\n        this.updateShaderUniforms();\n    }\n\n    @serialize()\n    public get darkmatter(): number {\n        return this._darkmatter;\n    }\n\n    public set darkmatter(value: number) {\n        this._darkmatter = value;\n        this.updateShaderUniforms();\n    }\n\n    @serialize()\n    public get distfading(): number {\n        return this._distfading;\n    }\n\n    public set distfading(value: number) {\n        this._distfading = value;\n        this.updateShaderUniforms();\n    }\n\n    @serialize()\n    public get saturation(): number {\n        return this._saturation;\n    }\n\n    public set saturation(value: number) {\n        this._saturation = value;\n        this.updateShaderUniforms();\n    }\n\n    /**\n     * Serializes this starfield procedural texture\n     * @returns a serialized starfield procedural texture object\n     */\n    public serialize(): any {\n        var serializationObject = SerializationHelper.Serialize(this, super.serialize());\n        serializationObject.customType = \"BABYLON.StarfieldProceduralTexture\";\n\n        return serializationObject;\n    }\n\n    /**\n     * Creates a Starfield Procedural Texture from parsed startfield procedural texture data\n     * @param parsedTexture defines parsed texture data\n     * @param scene defines the current scene\n     * @param rootUrl defines the root URL containing startfield procedural texture information\n     * @returns a parsed Starfield Procedural Texture\n     */\n    public static Parse(parsedTexture: any, scene: Scene, rootUrl: string): StarfieldProceduralTexture {\n        var texture = SerializationHelper.Parse(() => new StarfieldProceduralTexture(parsedTexture.name, parsedTexture._size, scene, undefined, parsedTexture._generateMipMaps), parsedTexture, scene, rootUrl);\n\n        return texture;\n    }\n}\n\n_TypeStore.RegisteredTypes[\"BABYLON.StarfieldProceduralTexture\"] = StarfieldProceduralTexture;"]}